basePath: /api-security
definitions:
  AddApiResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: false
        type: boolean
      value:
        $ref: '#/definitions/AddApiResponseValue'
    type: object
  AddApiResponseValue:
    properties:
      apiId:
        description: The API specification ID
        example: 10
        format: int64
        type: integer
    type: object
  ApiResponse:
    properties:
      basePath:
        description: The API's basePath
        example: /api
        type: string
      description:
        description: The API's description in the dashboard
        example: This is an example API
        type: string
      hostName:
        description: The  API's host name
        example: example.com
        type: string
      id:
        description: The API ID
        example: 10
        format: int64
        type: integer
      lastModified:
        description: The last modified timestamp
        example: 1556735907
        format: int64
        type: integer
      siteId:
        description: The site ID
        example: 11
        format: int64
        type: integer
      siteName:
        description: "The site\u2019s domain name"
        example: example.com
        type: string
      specificationViolationAction:
        description: The action taken when an API Specification Violation occurs
        enum:
        - ALERT_ONLY
        - BLOCK_REQUEST
        - BLOCK_USER
        - BLOCK_IP
        - IGNORE
        - DEFAULT
        example: ALERT_ONLY
        type: string
      violationActions:
        $ref: '#/definitions/ViolationActions'
    type: object
  ApiWithEndpointResponse:
    properties:
      basePath:
        description: The API's basePath
        example: /api
        type: string
      description:
        description: The API's description in the dashboard
        example: This is an example API
        type: string
      endpoints:
        items:
          $ref: '#/definitions/EndpointResponse'
        type: array
      hostName:
        description: The  API's host name
        example: example.com
        type: string
      id:
        description: The API ID
        example: 10
        format: int64
        type: integer
      lastModified:
        description: The last modified timestamp
        example: 1556735907
        format: int64
        type: integer
      siteId:
        description: The site ID
        example: 11
        format: int64
        type: integer
      siteName:
        description: "The site\u2019s domain name"
        example: example.com
        type: string
      specificationViolationAction:
        description: The action taken when an API Specification Violation occurs
        enum:
        - ALERT_ONLY
        - BLOCK_REQUEST
        - BLOCK_USER
        - BLOCK_IP
        - IGNORE
        - DEFAULT
        example: ALERT_ONLY
        type: string
      violationActions:
        $ref: '#/definitions/ViolationActions'
    required:
    - endpoints
    type: object
  EndpointResponse:
    properties:
      id:
        description: The endpoint ID
        example: 10
        format: int64
        type: integer
      method:
        description: The endpoint HTTP method
        enum:
        - POST
        - GET
        - PUT
        - PATCH
        - DELETE
        - HEAD
        - OPTIONS
        example: GET
        type: string
      path:
        description: The endpoint path
        example: /api/{param}
        type: string
      specificationViolationAction:
        description: The action taken when an API Specification Violation occurs
        enum:
        - ALERT_ONLY
        - BLOCK_REQUEST
        - BLOCK_USER
        - BLOCK_IP
        - IGNORE
        - DEFAULT
        example: ALERT_ONLY
        type: string
      violationActions:
        $ref: '#/definitions/ViolationActions'
    type: object
  GetApiResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: false
        type: boolean
      value:
        $ref: '#/definitions/ApiResponse'
    type: object
  GetApisResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: false
        type: boolean
      value:
        items:
          $ref: '#/definitions/ApiResponse'
        type: array
    type: object
  GetApisWithEndpointsResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: false
        type: boolean
      value:
        items:
          $ref: '#/definitions/ApiWithEndpointResponse'
        type: array
    type: object
  GetEndpointResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: false
        type: boolean
      value:
        $ref: '#/definitions/EndpointResponse'
    type: object
  GetEndpointsResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: false
        type: boolean
      value:
        items:
          $ref: '#/definitions/EndpointResponse'
        type: array
    type: object
  GetSiteConfigurationResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: false
        type: boolean
      value:
        $ref: '#/definitions/SiteConfigurationResponse'
    type: object
  GetSiteConfigurationsResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: false
        type: boolean
      value:
        items:
          $ref: '#/definitions/SiteConfigurationResponse'
        type: array
    type: object
  ParserErrorResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: true
        type: boolean
      value:
        items:
          type: string
        type: array
    type: object
  SimpleTextErrorResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: true
        type: boolean
      value:
        type: string
    type: object
  SimpleTextSuccessResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: false
        type: boolean
      value:
        type: string
    type: object
  SiteConfigurationResponse:
    properties:
      accountId:
        description: The account Id
        format: int64
        type: integer
      apiOnlySite:
        type: boolean
      lastModified:
        description: The last modified timestamp
        example: 1556735907
        format: int64
        type: integer
      nonApiRequestViolationAction:
        type: string
      siteId:
        description: The site id
        format: int64
        type: integer
      siteName:
        description: The site name
        example: example.com
        type: string
      violationActions:
        $ref: '#/definitions/ViolationActions'
    required:
    - apiOnlySite
    - nonApiRequestViolationAction
    type: object
  UpdateEndpointResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: false
        type: boolean
      value:
        $ref: '#/definitions/UpdateEndpointResponseValue'
    type: object
  UpdateEndpointResponseValue:
    properties:
      endpointId:
        description: The API endpoint ID
        example: 10
        format: int64
        type: integer
    type: object
  UpdateSiteConfigurationResponse:
    properties:
      isError:
        description: States if an error has occurred
        example: false
        type: boolean
      value:
        $ref: '#/definitions/UpdateSiteConfigurationResponseValue'
    type: object
  UpdateSiteConfigurationResponseValue:
    properties:
      siteId:
        description: The Site ID
        example: 10
        format: int64
        type: integer
    type: object
  ViolationActions:
    properties:
      invalidMethodViolationAction:
        description: The action taken when an invalid method Violation occurs. Assigning
          DEFAULT will inherit the action from parent object, DEFAULT is not applicable
          for site-level configuration APIs
        enum:
        - ALERT_ONLY
        - BLOCK_REQUEST
        - BLOCK_USER
        - BLOCK_IP
        - IGNORE
        - DEFAULT
        example: ALERT_ONLY
        type: string
      invalidParamValueViolationAction:
        description: The action taken when an invalid parameter value Violation occurs.
          Assigning DEFAULT will inherit the action from parent object, DEFAULT is
          not applicable for site-level configuration APIs
        enum:
        - ALERT_ONLY
        - BLOCK_REQUEST
        - BLOCK_USER
        - BLOCK_IP
        - IGNORE
        - DEFAULT
        example: ALERT_ONLY
        type: string
      invalidUrlViolationAction:
        description: The action taken when an invalid URL Violation occurs. Assigning
          DEFAULT will inherit the action from parent object, DEFAULT is not applicable
          for site-level configuration APIs
        enum:
        - ALERT_ONLY
        - BLOCK_REQUEST
        - BLOCK_USER
        - BLOCK_IP
        - IGNORE
        - DEFAULT
        example: ALERT_ONLY
        type: string
      missingParamViolationAction:
        description: The action taken when a missing parameter Violation occurs. Assigning
          DEFAULT will inherit the action from parent object, DEFAULT is not applicable
          for site-level configuration APIs
        enum:
        - ALERT_ONLY
        - BLOCK_REQUEST
        - BLOCK_USER
        - BLOCK_IP
        - IGNORE
        - DEFAULT
        example: ALERT_ONLY
        type: string
    type: object
host: api.imperva.com
info:
  description: Imperva api-security API Documentation
  license:
    name: The terms in the absence of an applicable signed agreement between you and
      Imperva
    url: https://www.imperva.com/legal/license-agreement/
  title: Imperva api-security
  version: 1.0.0
paths:
  /api:
    get:
      consumes:
      - application/json
      description: Retrieves details of all protected APIs for all sites in the account
      operationId: getAllApis
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetApisResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Retrieve all APIs for the account
      tags:
      - API
  /api/{siteId}:
    get:
      consumes:
      - application/json
      description: Retrieves details of all protected APIs for a specific site in
        the account
      operationId: getAllSiteApis
      parameters:
      - description: The site ID
        format: int64
        in: path
        name: siteId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetApisResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Retrieve all APIs for a site
      tags:
      - API
    post:
      consumes:
      - multipart/form-data
      description: Adds an API specification to a site
      operationId: addApi
      parameters:
      - description: The API specification document. The supported format is OAS2
          or OAS3 (JSON or YAML)
        in: formData
        name: apiSpecification
        required: true
        type: file
      - description: Override the spec basePath / server base path with this value
        in: formData
        name: basePath
        required: false
        type: string
      - description: A description that will help recognize the API in the dashboard
        in: formData
        name: description
        required: false
        type: string
      - description: The site ID
        format: int64
        in: path
        name: siteId
        required: true
        type: integer
      - default: ALERT_ONLY
        description: The action taken when an API Specification Violation occurs
        enum:
        - ALERT_ONLY
        - BLOCK_REQUEST
        - BLOCK_USER
        - BLOCK_IP
        - IGNORE
        - DEFAULT
        in: formData
        name: specificationViolationAction
        required: false
        type: string
      - default: true
        description: When set to true, verifies that the host name and site name match.
          Set to false in cases such as CNAME reuse or API management integrations
          where the host name and site name do not match.
        in: formData
        name: validateHost
        required: false
        type: boolean
      - description: Json payload described by ViolationActions Object. This object
          defines different actions taken when each violation occurs
        in: formData
        name: violationActions
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/AddApiResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
        422:
          description: Failed to parse the API specification document
          schema:
            $ref: '#/definitions/ParserErrorResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Add an API
      tags:
      - API
  /api/{siteId}/all:
    get:
      consumes:
      - application/json
      description: Retrieves details of all protected APIs and their endpoints for
        a specific site in the account
      operationId: getAllSiteApisWithEndpoints
      parameters:
      - description: The site ID
        format: int64
        in: path
        name: siteId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetApisWithEndpointsResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Retrieve all APIs and endpoints for a site
      tags:
      - API
  /api/{siteId}/{apiId}:
    delete:
      consumes:
      - application/json
      description: Deletes an API from a site in the account
      operationId: deleteApi
      parameters:
      - description: The API ID
        format: int64
        in: path
        name: apiId
        required: true
        type: integer
      - description: The site ID
        format: int64
        in: path
        name: siteId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SimpleTextSuccessResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Delete an API
      tags:
      - API
    get:
      consumes:
      - application/json
      description: Retrieves details of a specific API
      operationId: getApi
      parameters:
      - description: The API ID
        format: int64
        in: path
        name: apiId
        required: true
        type: integer
      - description: The site ID
        format: int64
        in: path
        name: siteId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetApiResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Retrieve an API
      tags:
      - API
    post:
      consumes:
      - multipart/form-data
      description: Updates any or all of the optional parameters.
      operationId: updateApi
      parameters:
      - description: The API ID
        format: int64
        in: path
        name: apiId
        required: true
        type: integer
      - description: The API specification document. The supported format is OAS2
          or OAS3 (JSON or YAML)
        in: formData
        name: apiSpecification
        required: false
        type: file
      - description: A description that will help recognize the API in the dashboard
        in: formData
        name: description
        required: false
        type: string
      - description: The site ID
        format: int64
        in: path
        name: siteId
        required: true
        type: integer
      - description: The action taken when an API Specification Violation occurs
        enum:
        - ALERT_ONLY
        - BLOCK_REQUEST
        - BLOCK_USER
        - BLOCK_IP
        - IGNORE
        - DEFAULT
        in: formData
        name: specificationViolationAction
        required: false
        type: string
      - default: true
        description: When set to true, verifies that the host name and site name match.
          Set to false in cases such as CNAME reuse or API management integrations
          where the host name and site name do not match.
        in: formData
        name: validateHost
        required: false
        type: boolean
      - description: Json payload described by ViolationActions Object. This object
          defines different actions taken when each violation occurs
        in: formData
        name: violationActions
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/AddApiResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
        422:
          description: Failed to parse the API specification document
          schema:
            $ref: '#/definitions/ParserErrorResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Update an API
      tags:
      - API
  /config/site:
    get:
      consumes:
      - application/json
      description: Retrieve all the site configurations in account
      operationId: getSiteConfigurationForAccount
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetSiteConfigurationsResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Retrieve the all site configuration in account
      tags:
      - SiteConfiguration
  /config/site/{siteId}:
    get:
      consumes:
      - application/json
      description: Retrieve all the site configuration of a specific site
      operationId: getSiteConfigurationForSite
      parameters:
      - description: The site ID
        format: int64
        in: path
        name: siteId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetApisResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/GetSiteConfigurationResponse'
      summary: Retrieve the site configuration for a given site
      tags:
      - SiteConfiguration
    post:
      consumes:
      - application/json
      description: Update site configuration with one of the optional parameters
      operationId: updateSiteConfiguration
      parameters:
      - description: Settings for attack policy and more
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/SiteConfigurationResponse'
      - description: The site ID
        format: int64
        in: path
        name: siteId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/UpdateSiteConfigurationResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Update site configuration
      tags:
      - SiteConfiguration
  /endpoint/{apiId}:
    get:
      consumes:
      - application/json
      description: Retrieve details on all endpoints for an API
      operationId: getAllUserFacingEndpoints
      parameters:
      - description: The API ID
        format: int64
        in: path
        name: apiId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetEndpointsResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Retrieve all endpoints
      tags:
      - Endpoint
  /endpoint/{apiId}/{endpointId}:
    get:
      consumes:
      - application/json
      description: Retrieve details for an endpoint
      operationId: getUserFacingEndpoint
      parameters:
      - description: The API ID
        format: int64
        in: path
        name: apiId
        required: true
        type: integer
      - description: The endpoint ID
        format: int64
        in: path
        name: endpointId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetEndpointResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Retrieve an endpoint
      tags:
      - Endpoint
    post:
      consumes:
      - multipart/form-data
      description: Update an endpoint API Specification Violation Action
      operationId: updateEndpoint
      parameters:
      - description: The API ID
        format: int64
        in: path
        name: apiId
        required: true
        type: integer
      - description: The endpoint ID
        format: int64
        in: path
        name: endpointId
        required: true
        type: integer
      - description: The action taken when an API Specification Violation occurs
        enum:
        - ALERT_ONLY
        - BLOCK_REQUEST
        - BLOCK_USER
        - BLOCK_IP
        - IGNORE
        - DEFAULT
        in: formData
        name: specificationViolationAction
        required: false
        type: string
      - description: Json payload described by ViolationActions Object. This object
          defines different actions taken when each violation occurs
        in: formData
        name: violationActions
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/UpdateEndpointResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/SimpleTextErrorResponse'
      summary: Update an endpoint
      tags:
      - Endpoint
schemes:
- https
security:
- api_id: []
  api_key: []
securityDefinitions:
  api_id:
    description: An API ID created and managed in the Imperva Cloud Security Console
      and used for authentication
    in: header
    name: x-API-Id
    type: apiKey
  api_key:
    description: An API key created and managed in the Imperva Cloud Security Console
      and used for authentication
    in: header
    name: x-API-Key
    type: apiKey
swagger: '2.0'
tags:
- name: API
- name: Endpoint
- name: SiteConfiguration
